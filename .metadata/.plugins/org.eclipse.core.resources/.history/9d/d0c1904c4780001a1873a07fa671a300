package h_jtable;

import java.awt.BorderLayout;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;

public class JtableTest extends JFrame {
	JTable table;// 이객체가 널값이다 객체생성이 필수이다 변수만 선언해둔 상태이다 .
	JButton btn;
	myTableModel myTM;
	public JtableTest() {
		// 객체생성
		table = new JTable();/// 테이블의 뷰
		btn = new JButton("cheak");
		myTM = new myTableModel();//데이터와 컬럼명
		// 화면을 구성
		add(new JScrollPane(table), BorderLayout.CENTER);// 반드시 스크롤 패인 대입해줘야화면에뜬다 
		add(btn, BorderLayout.NORTH);

		// 화면에 출력하는 부분
		setBounds(100, 100, 500, 400);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	// 이너클래스 생성 위에 화면을 구성하기때문에 상속 table model 이라는 이것은 이름 자체가 추상이니까 추상메소드이다 .옆의 버튼
	// 눌러서 오버라이딩 필수
	class myTableModel extends AbstractTableModel {
		String [] columnName = {"1","2","3","4"};
		ArrayList data= new ArrayList();
		public int getColumnCount() {

			return columnName.length;
		}//위에서 선언한 변수 

		public int getRowCount() {

			return data.size();
		}// 어레이 리스트의 함수를 리턴한다

		public Object getValueAt(int rowIndex, int columnIndex) {
			//행과열에해당하는값 리턴하는 함수
			ArrayList temp = (ArrayList)data.get(rowIndex);
			return temp.get(columnIndex);
		}

	}

	public static void main(String[] arge) {
		JtableTest jt = new JtableTest();

	}
}
